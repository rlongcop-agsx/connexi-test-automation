name: Robot Framework Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  initialize_environment:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target dependencies/

    - name: Run WebDriver Manager
      run: |
        python -c "from webdriver_manager.microsoft import EdgeChromiumDriverManager; EdgeChromiumDriverManager().install()"

    - name: Save Installed Libraries
      uses: actions/upload-artifact@v4
      with:
        name: dependencies
        path: dependencies/

  run_tests:
    runs-on: windows-latest
    needs: initialize_environment # Depends on the initialization job

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download Installed Libraries
      uses: actions/download-artifact@v4
      with:
        name: dependencies
        path: dependencies/

    - name: Set PYTHONPATH to Include Dependencies
      run: |
        set PYTHONPATH=%PYTHONPATH%;%CD%/dependencies

    - name: Run Robot Framework Tests
      shell: bash
      run: |
        robot -d reports \
        -v BASE_URL:${{ secrets.BASE_URL }} \
        -v TABLEAU_URL:${{ secrets.TABLEAU_URL }} \
        -v ANALYTICS_EMAIL:${{ secrets.ANALYTICS_EMAIL }} \
        -v FORECASTING_EMAIL:${{ secrets.FORECASTING_EMAIL }} \
        -v INVENTORY_EMAIL:${{ secrets.INVENTORY_EMAIL }} \
        -v ORDERING_EMAIL:${{ secrets.ORDERING_EMAIL }} \
        -v PROCUREMENTSP_EMAIL:${{ secrets.PROCUREMENTSP_EMAIL }} \
        -v PROCUREMENT_EMAIL:${{ secrets.PROCUREMENT_EMAIL }} \
        -v QUALITYMANAGEMENT_EMAIL:${{ secrets.QUALITYMANAGEMENT_EMAIL }} \
        -v SUPPLYPLAN_EMAIL:${{ secrets.SUPPLYPLAN_EMAIL }} \
        -v VENDOR_EMAIL:${{ secrets.VENDOR_EMAIL }} \
        test-scenarios

    - name: Archive Test Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: reports/

  publish_test_report:
    runs-on: ubuntu-latest
    needs: run_tests
    if: always()

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download Test Results Artifact
      uses: actions/download-artifact@v4
      with:
        name: test-report
        path: ./reports

    - name: Publish Test Results as a GitHub Pages Site
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GH_PAGES_TOKEN }}
        external_repository: ${{ github.repository }}
        publish_dir: ./reports/
        publish_branch: gh-pages
        commit_message: "Publish Connexi Report"