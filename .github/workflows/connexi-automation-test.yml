name: Robot Framework Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  run_automation_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Node.js (for Appium)
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Appium
      run: |
        npm install -g appium
        appium --version

    - name: Install Docker
      run: |
        # Clean up any previous containerd installations
        sudo apt-get remove --purge -y containerd containerd.io
        sudo apt-get autoremove -y
        sudo apt-get clean
        
        # Add Docker's official GPG key and repo
        sudo apt-get update
        sudo apt-get install -y \
          apt-transport-https \
          ca-certificates \
          curl \
          gnupg \
          lsb-release
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        
        # Update apt and install Docker
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        sudo systemctl enable --now docker

    - name: Build Docker Image
      run: |
        docker build -t my-appium-image .

    - name: Run Docker Container
      run: |
        docker run --privileged -d -p 6080:6080 -p 4723:4723 -p 5554:5554 -p 5555:5555 -e DEVICE="Samsung Galaxy S6" --name appium-container my-appium-image

    - name: Install WebDriver Manager
      run: |
        python -c "from webdriver_manager.microsoft import EdgeChromiumDriverManager; EdgeChromiumDriverManager().install()"

    - name: Start Appium Server
      run: |
        appium --log-level error &

    - name: Wait for Emulator to Boot
      run: |
        adb wait-for-device
        boot_completed=""
        while [ -z "$boot_completed" ]; do
          boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
          echo "Waiting for emulator to boot..."
          sleep 5
        done
        echo "Emulator boot completed!"

    - name: Run Robot Framework tests
      shell: bash
      run: |
        robot -d reports \
        -v BASE_URL:${{ secrets.BASE_URL }} \
        -v TABLEAU_URL:${{ secrets.TABLEAU_URL }} \
        -v ANALYTICS_EMAIL:${{ secrets.ANALYTICS_EMAIL }} \
        -v FORECASTING_EMAIL:${{ secrets.FORECASTING_EMAIL }} \
        -v INVENTORY_EMAIL:${{ secrets.INVENTORY_EMAIL }} \
        -v ORDERING_EMAIL:${{ secrets.ORDERING_EMAIL }} \
        -v PROCUREMENTSP_EMAIL:${{ secrets.PROCUREMENTSP_EMAIL }} \
        -v PROCUREMENT_EMAIL:${{ secrets.PROCUREMENT_EMAIL }} \
        -v QUALITYMANAGEMENT_EMAIL:${{ secrets.QUALITYMANAGEMENT_EMAIL }} \
        -v SUPPLYPLAN_EMAIL:${{ secrets.SUPPLYPLAN_EMAIL }} \
        -v VENDOR_EMAIL:${{ secrets.VENDOR_EMAIL }} \
        -i mobile \
        test-scenarios

    - name: Archive test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: reports/

    - name: Publish test results as a GitHub Pages site
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GH_PAGES_TOKEN }}
        external_repository: ${{ github.repository }}
        publish_dir: ./reports/
        publish_branch: gh-pages 
        commit_message: "Publish Connexi Report"